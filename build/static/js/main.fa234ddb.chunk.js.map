{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/lebowskiReducer.js","redux/reducers/photoReducer.js","redux/reducers/calendarReducer.js","redux/reducers/bandVenueReducer.js","redux/reducers/profileEditReducer.js","redux/reducers/genreReducer.js","redux/reducers/adminReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/lebowskiSaga.js","redux/sagas/photoSaga.js","redux/sagas/calendarSaga.js","redux/sagas/bandVenueSaga.js","redux/sagas/profileEditSaga.js","redux/sagas/genreSaga.js","redux/sagas/adminSaga.js","redux/sagas/index.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Footer/Footer.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/AboutPage/AboutPage.js","components/Lebowski/Lebowski.js","components/Shows/Shows.js","components/CalendarView/CalendarView.js","components/BandView/BandView.js","components/Gmaps/Gmaps.js","components/VenueView/VenueView.js","components/Zip/Zip.js","components/SignInSuccess/SignInSuccess.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/PhotoEdit/PhotoEdit.js","components/Admin/Admin.js","components/BandEdit/BandEdit.js","components/VenueEdit/VenueEdit.js","components/AddEvent/AddEvent.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","lebowskiReducer","photoReducer","calendarReducer","personalCalendar","bandReducer","venueReducer","allBands","allVenues","editBandReducer","editVenueReducer","allGenres","bandGenre","bandEditGenre","listAllReducer","rootReducer","errors","user","event","currentEvent","editProfile","genreReducer","admin","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","lebowskiSaga","nobdyFucksWithTheJesus","takeEvery","quoteList","photoSaga","getYourPicture","wantYourPicture","id","userImage","image","band","venue","pic","photoUp","calendarSaga","getEventList","getNewList","getMyCalendar","removeEvent","createNewEvent","eventList","list","query","who","remove","delete","eventId","bandVenueSaga","getTheBand","getTheVenue","getAllBands","getAllVenues","newBand","newVenue","theBand","theVenue","profileEditSaga","getThisBand","getThisVenue","editDetails","details","newDetail","userId","genreSaga","getAllGenres","getThisGenre","getEditGenre","addMyGenre","thisGenre","genre","newGenre","adminSaga","getAllAdmin","allAdmin","rootSaga","all","LoginPage","Component","username","password","login","preventDefault","this","props","dispatch","handleInputChangeFor","propertyName","setState","target","value","hacker","i","render","className","role","onSubmit","htmlFor","name","onChange","onClick","connect","RegisterPage","ComponentToProtect","component","otherProps","ComponentToShow","Footer","withRouter","history","push","to","src","photo","alt","AboutPage","Lebowski","componentDidMount","moreFromTheDude","reduxState","quote","lines","map","rug","key","text","character","Shows","show","filter","handleInputChange","search","predictions","getPredictions","length","filteredList","toLowerCase","indexOf","bandname","venuename","refresh","submit","toggle","size","placeholder","ref","input","CalendarView","bandInfo","pathname","venueInfo","band_photo","height","width","bands_id","date","cost","venue_photo","venues_id","BandView","location","gig","description","href","twitter","rel","facebook","www","youtube","Gmaps","bootstrapURLKeys","process","defaultCenter","center","defaultZoom","zoom","defaultProps","lat","lng","VenueView","address","phone","Zip","zip","zippy","handleChange","pattern","SignInSuccess","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","useState","setValue","PhotoEdit","file","filename","addClick","refs","fileUploader","click","files","URL","createObjectURL","formData","FormData","append","swal","button","goBack","Admin","addMe","editMe","listMe","removeMe","edieMe","BandEdit","descriptionEdit","bandId","content","then","buttons","dangerMode","keep","edit","nameEdit","current","genreEdit","options","inputOptions","inputPlaceholder","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","photoEdit","socialMedia","link","url","VenueEdit","addressEdit","venueId","phoneEdit","AddEvent","Date","bands","bandsId","venues","venuesId","addition","newEvent","objectToSend","selectBand","selectDate","selectVenue","venue_name","band_name","selected","showTimeSelect","dateFormat","dropdown","App","exact","from","path","UserPage","InfoPage","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fa234ddb.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","// stores what login in mode user is in\nconst loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","// stores info on who is signed in\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","//store your quotes\nconst lebowskiReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'I_AM_THE_WALRUS':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\n\nexport default lebowskiReducer;","//store user photo\nconst photoReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'GOT_YOUR_PICTURE':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\n\nexport default photoReducer;","import { combineReducers } from 'redux';\n\n//stores calendar event list\nconst calendarReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_EVENT_LIST':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n// stores personal calendar events\nconst personalCalendar = (state=[], action)=>{\n    switch (action.type) {\n        case 'SET_MY_CALENDAR':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default combineReducers({\n    calendarReducer,\n    personalCalendar\n  });","import { combineReducers } from 'redux';\n\n//store current band\nconst bandReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'SET_THE_BAND':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n//store current venue\nconst venueReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'SET_THE_VENUE':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n//stores all bands\nconst allBands =(state =[], action)=>{\n    switch (action.type) {\n        case 'SET_ALL_BANDS':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n//stores all venues\nconst allVenues =(state =[], action)=>{\n    switch (action.type) {\n        case 'SET_ALL_VENUES':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    bandReducer,\n    venueReducer,\n    allBands,\n    allVenues\n  });","import { combineReducers } from 'redux';\n\n//store logged-in band\nconst editBandReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'SET_THIS_BAND':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n//store logged-in venue\nconst editVenueReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'SET_THIS_VENUE':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\n\nexport default combineReducers({\n    editBandReducer,\n    editVenueReducer,\n  });","import { combineReducers } from 'redux';\n\n//store all genres\nconst allGenres = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ALL_GENRES':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n//store specific band genre\nconst bandGenre = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_THIS_GENRE':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n//store band genre for edit\nconst bandEditGenre = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_EDIT_GENRE':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default combineReducers({\n    allGenres,\n    bandGenre,\n    bandEditGenre\n  });","import { combineReducers } from 'redux';\n\n//stores list upon admin request\nconst listAllReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ADMIN_LIST':\n            return state = action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default combineReducers({\n    listAllReducer\n  });","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport lebowskiReducer from './lebowskiReducer';\nimport photoReducer from './photoReducer';\nimport event from './calendarReducer';\nimport currentEvent from './bandVenueReducer';\nimport editProfile from './profileEditReducer';\nimport genreReducer from './genreReducer';\nimport admin from './adminReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  lebowskiReducer,\n  photoReducer,\n  event,\n  currentEvent,\n  editProfile,\n  genreReducer,\n  admin\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n\nfunction* lebowskiSaga() {\n    yield takeEvery('NOBODY_FUCKS_WITH_THE_JESUS', nobdyFucksWithTheJesus);\n}\n\n//gets list of quotes\nfunction* nobdyFucksWithTheJesus(){\n    // console.log(\t\"Come on, Walter, we're ending this thing cheap.\");\n    const quoteList = yield axios.get('http://lebowski.me/api/quotes/random');\n    // console.log('in saga - get leboswki with:', quoteList.data.quote.lines);\n    yield put({type: 'I_AM_THE_WALRUS', payload: quoteList.data})\n}\n\n\n\nexport default lebowskiSaga;","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* photoSaga() {\n    yield takeEvery('WANT_YOUR_PICTURE', wantYourPicture);\n    yield takeEvery('GET_YOUR_PICTURE', getYourPicture);\n}\n\n\n//gets DB stored image\nfunction* getYourPicture(id){\n    const userImage = yield axios.get(`/api/photo/${id.payload}`);\n    yield put({type: 'GOT_YOUR_PICTURE', payload: userImage.data});\n}\n\n//updates user photo in DB\nfunction* wantYourPicture(image){\n    const config = { headers: {'Content-Type': 'multipart/form-data'} }\n    try {\n        const photoUp = yield axios.put(`/api/photo/${image.payload.user.id}/${image.payload.user.band}/${image.payload.user.venue}`, image.payload.pic, config);\n        console.log('returning from photo put with', photoUp);\n        yield put({type: 'GET_YOUR_PICTURE', payload: image.payload.user.id});\n    } catch(error){\n        console.log('error in saga /photo/PUT:', error);\n    }\n}\n\n\n\nexport default photoSaga;","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* calendarSaga() {\n    yield takeEvery('GET_EVENT_LIST', getEventList);\n    yield takeEvery('GET_NEW_LIST', getNewList);\n    yield takeEvery('GET_MY_CALENDAR', getMyCalendar);\n    yield takeEvery('REMOVE_EVENT', removeEvent);\n    yield takeEvery('CREATE_NEW_EVENT', createNewEvent);\n}\n\n//gets list of all events\nfunction* getEventList(){\n    // console.log(\"We are here in calendar event GET\");\n    const eventList = yield axios.get('/api/calendar');\n    // console.log('in saga - calendar event GET back with:', eventList.data);\n    yield put({type: 'SET_EVENT_LIST', payload: eventList.data})\n}\n\n//get filtered list of calendar event\nfunction* getNewList(list){\n    // console.log(\"We are here in NEW calendar event GET\", list.payload);\n    const eventList = yield axios.get(`/api/calendar/new/${list.payload.type}/${list.payload.query}`);\n    // console.log('in saga - NEW calendar event GET back with:', eventList.data);\n    yield put({type: 'SET_EVENT_LIST', payload: eventList.data})\n}\n\n//get personalized calendar from DB\nfunction* getMyCalendar(user){\n    // console.log(\"here in personal calendar event GET\", user.payload.id, user.payload.who);\n    const eventList = yield axios.get(`/api/calendar/personal/${user.payload.who}/${user.payload.id}`);\n    // console.log('in saga - personal calendar GET back with:', eventList.data);\n    yield put({type: 'SET_MY_CALENDAR', payload: eventList.data})\n}\n\n//remove event from calendar\nfunction* removeEvent(remove) {\n    //console.log(\"in saga event DELETE with: \", remove.payload);\n    try {\n        yield axios.delete(`/api/calendar/personal/${remove.payload.who}/${remove.payload.id}/${remove.payload.eventId}`);\n        yield put({type: 'GET_MY_CALENDAR', payload: remove.payload})\n    } catch(error){\n        console.log(error);\n    }\n}\n\n//create new event in calendar\nfunction* createNewEvent(event) {\n    // console.log(\"in saga add event POST with: \", event.payload);\n    try {\n        yield axios.post(`/api/calendar/add/personal/${event.payload.id}`, event.payload);\n        yield put({type: 'GET_MY_CALENDAR', payload: event.payload})\n    } catch(error){\n        console.log(error);\n    }\n}\n\nexport default calendarSaga;\n","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* bandVenueSaga() {\n    yield takeEvery('GET_THE_BAND', getTheBand);\n    yield takeEvery('GET_THE_VENUE', getTheVenue);\n    yield takeEvery('NEW_BAND', newBand);\n    yield takeEvery('NEW_VENUE', newVenue);\n    yield takeEvery('GET_ALL_BANDS', getAllBands);\n    yield takeEvery('GET_ALL_VENUES', getAllVenues);\n\n}\n\n//gets the current band from DB\nfunction* getTheBand(band){\n    // console.log(\"We are here in band GET\", band.payload);\n    const theBand = yield axios.get(`/api/event/band/${band.payload}`);\n    // console.log('in saga - band GET back with:', theBand.data);\n    yield put({type: 'SET_THE_BAND', payload: theBand.data[0]})\n}\n\n//gets the current venue from DB\nfunction* getTheVenue(venue){\n    // console.log(\"We are here in venue GET\", venue.payload);\n    const theVenue = yield axios.get(`/api/event/venue/${venue.payload}`);\n    // console.log('in saga - venue GET back with:', theVenue.data);\n    yield put({type: 'SET_THE_VENUE', payload: theVenue.data[0]})\n}\n\n//gets all bands from DB\nfunction* getAllBands(){\n    // console.log(\"We are here in all bands GET\");\n    const allBands = yield axios.get(`/api/event/all/bands`);\n    // console.log('in saga - all bands GET back with:', allBands.data);\n    yield put({type: 'SET_ALL_BANDS', payload: allBands.data})\n}\n\n//gets all venues from DB\nfunction* getAllVenues(){\n    // console.log(\"We are here in venue GET\");\n    const allVenues = yield axios.get(`/api/event/all/venues`);\n    // console.log('in saga - venue GET back with:', allVenues.data);\n    yield put({type: 'SET_ALL_VENUES', payload: allVenues.data})\n}\n\n//unlocks band account for user\nfunction* newBand(band){\n    // console.log(\"We are here in new band POST saga\", band.payload);\n    try {\n        const newBand = yield axios.post(`/api/profile/new/band/${band.payload}`);\n        console.log('returning from new band with', newBand);\n        yield put({type: 'GET_THIS_BAND', payload: band.payload});\n        } catch(error){\n            console.log('error in saga new band:', error);\n        }\n}\n\n//unlocks venue account for user\nfunction* newVenue(venue){\n    // console.log(\"We are here in new venue POST saga\", venue.payload);\n    try {\n        const newVenue = yield axios.post(`/api/profile/new/venue/${venue.payload}`);\n        console.log('returning from new venue with', newVenue);\n        yield put({type: 'GET_THIS_VENUE', payload: venue.payload});\n        } catch(error){\n            console.log('error in saga new venue:', error);\n        }\n}\n\n\nexport default bandVenueSaga;","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* profileEditSaga() {\n    yield takeEvery('GET_THIS_BAND', getThisBand);\n    yield takeEvery('GET_THIS_VENUE', getThisVenue);\n    yield takeEvery('EDIT_DETAILS', editDetails);\n}\n\n//gets the logged-in band from DB\nfunction* getThisBand(band){\n    // console.log(\"We are here in band profile GET\", band.payload);\n    const theBand = yield axios.get(`/api/profile/band/${band.payload}`);\n    // console.log('in saga - band profile GET back with:', theBand.data);\n    yield put({type: 'SET_THIS_BAND', payload: theBand.data[0]})\n}\n\n//gets the logged-in venue from DB\nfunction* getThisVenue(venue){\n    // console.log(\"We are here in venue profile GET\", venue.payload);\n    const theVenue = yield axios.get(`/api/profile/venue/${venue.payload}`);\n    // console.log('in saga - venue profile GET back with:', theVenue.data);\n    yield put({type: 'SET_THIS_VENUE', payload: theVenue.data[0]})\n}\n\n//pass details change to server\nfunction* editDetails(details){\n    // console.log(\"We are here in detail edit saga\", details.payload.edit, details.payload.who, details.payload.id);\n    try {\n        const newDetail = yield axios.put(`/api/profile/details/${details.payload.id}`, details.payload);\n        console.log('returning from detail edit with', newDetail);\n         if(details.payload.who ==='bands'){\n             yield put({type: 'GET_THIS_BAND', payload: details.payload.userId});\n         }else{\n             yield put({type: 'GET_THIS_VENUE', payload: details.payload.userId});\n         }     \n    } catch(error){\n        console.log('error in saga detail edit:', error);\n    }\n}\n\n\nexport default profileEditSaga;","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* genreSaga() {\n    yield takeEvery('GET_ALL_GENRES', getAllGenres);\n    yield takeEvery('GET_THIS_GENRE', getThisGenre);\n    yield takeEvery('GET_EDIT_GENRE', getEditGenre);\n    yield takeEvery('ADD_MY_GENRE', addMyGenre);\n}\n\n//gets all genres from DB\nfunction* getAllGenres(){\n    // console.log(\"We are here in saga GET all genres\");\n    const allGenres = yield axios.get(`/api/genre`);\n    // console.log('in saga - all genres GET back with:', allGenres.data);\n    yield put({type: 'SET_ALL_GENRES', payload: allGenres.data})\n}\n\n//gets this genre from DB\nfunction* getThisGenre(band){\n    // console.log(\"We are here in saga GET this genre\");\n    const thisGenre = yield axios.get(`/api/genre/${band.payload}`);\n    // console.log('in saga - this genre GET back with:', thisGenre.data);\n    yield put({type: 'SET_THIS_GENRE', payload: thisGenre.data})\n}\n\n//gets bands genre for edit from DB\nfunction* getEditGenre(band){\n    // console.log(\"We are here in saga GET this band's genre for edit\");\n    const thisGenre = yield axios.get(`/api/genre/edit/${band.payload}`);\n    // console.log('in saga - this bands edit genre GET back with:', thisGenre.data);\n    yield put({type: 'SET_EDIT_GENRE', payload: thisGenre.data})\n}\n\n//adds new genre to band in DB\nfunction* addMyGenre(genre){\n    yield console.log(\"We are here in new genre for band POST saga\", genre.payload);\n    try {\n        const newGenre = yield axios.post(`/api/genre/edit/new/${genre.payload.id}`, genre.payload);\n        console.log('returning from new genre for band POST with', newGenre);\n        yield put({type: 'GET_EDIT_GENRE', payload: genre.payload.id});\n        yield put({type: 'GET_THIS_BAND', payload: genre.payload.userId});\n    } catch(error){\n        console.log('error in saga new gnere:', error);\n    }\n}\n\n\nexport default genreSaga;","import axios from 'axios'\nimport {takeEvery, put} from \"redux-saga/effects\";\n\n\n// these sagas take the dispatch and runs them before they get to the reducers\nfunction* adminSaga() {\n    yield takeEvery('GET_ALL_ADMIN', getAllAdmin);\n   \n}\n\n//gets all genres from DB\nfunction* getAllAdmin(type){\n    // console.log(\"We are here in saga GET all Admin\");\n    const allAdmin = yield axios.get(`/api/admin/${type.payload}`);\n    // console.log('in saga - all admin GET back with:', allAdmin.data);\n    yield put({type: 'SET_ADMIN_LIST', payload: allAdmin.data})\n}\n\n\nexport default adminSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport lebowskiSaga from './lebowskiSaga';\nimport photoSaga from './photoSaga';\nimport calendarSaga from './calendarSaga';\nimport bandVenueSaga from './bandVenueSaga';\nimport profileEditSaga from './profileEditSaga';\nimport genreSaga from './genreSaga';\nimport adminSaga from './adminSaga';\n\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    lebowskiSaga(),\n    photoSaga(),\n    calendarSaga(),\n    bandVenueSaga(),\n    profileEditSaga(),\n    genreSaga(),\n    adminSaga()\n  ]);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  hacker=()=>{\n    for(let i=10; i>0; i--){\n      console.log(\"hacking will commence in\", i,\"...\")\n      if(i===1){\n        console.log(\"hacking complete.... I'm in!\")\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"flexContainer\">\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form className=\"flexForm\" onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password :\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'}); this.hacker()}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"flexContainer\">\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form className=\"flexForm\" onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password :\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport '../App/App.css'\n\n//currently only be used in full screen mode\n\nconst Footer = () => (\n  <footer className=\"bop foot\">\n    &copy; Beats on Point\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={()=>{props.dispatch({ type: 'LOGOUT' }); props.history.push('/home')}}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default withRouter(connect()(LogOutButton));\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport '../App/App.css';\n\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title bop\">Beats on Point𝅘𝅥𝅯 </h2>\n    </Link>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/home\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.user.id ? 'Home' : 'Login / Register'}\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          <Link className=\"nav-link\" to=\"/info\">\n            Info Page\n          </Link>\n          <LogOutButton className=\"nav-link\"/>\n        </>\n      )}\n      {/* if logged in user is a band show */}\n      {props.user.band === true && (\n        <>\n          {/* <Link className=\"nav-link\" to=\"/band-edit\">\n            Edit Profile\n          </Link> */}\n          <img className=\"profileCircle\" \n          src={`data:image/png;base64,${props.user.photo}`} \n          alt=\"edit profile\"\n          onClick={()=>props.history.push('/calendar-edit')}\n          />\n        </>\n      )}\n      {/* if logged in user is a venue show */}\n       {props.user.venue === true && (\n        <>\n          {/* <Link className=\"nav-link\" to=\"/venue-edit\">\n            Edit Profile\n          </Link> */}\n           <img className=\"profileCircle\" \n            src={`data:image/png;base64,${props.user.photo}`} \n            alt=\"edit profile\"\n            onClick={()=>props.history.push('/calendar-edit')}\n          />\n        </>\n      )}\n        {/* if logged in user is an admin */}\n        {props.user.admin === true && (\n        <>\n          <Link className=\"nav-link\" to=\"/admin\">\n            Admin\n          </Link>\n        </>\n      )}\n      {/* Always show this link since the about page is not protected */}\n      <Link className=\"nav-link\" to=\"/calendar-view\">\n        Calendar\n      </Link>\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default withRouter(connect(mapStateToProps)(Nav));\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div>\n      <p>\n        About us? well we are here to help\n      </p>\n      <p>\n        Help how? well finding your local bands!\n      </p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\n\n\n//404 landing page, just calls a simple api to gether quotes from the big lebowski\nclass Lebowski extends Component {\n\n  //bring in list of images stored in postgres made available by redux\n  componentDidMount =()=>{\n    this.moreFromTheDude();\n  }\n\n  moreFromTheDude =()=>{\n    this.props.dispatch({ type: \"NOBODY_FUCKS_WITH_THE_JESUS\" });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='lebowskiContainer'>\n          <h1 className=\"dude\">\"Yeah well, that's just, ya know, like, your opinion, man.\"</h1>\n          <p className=\"dude\">\"The Dude\"</p>\n          <button className=\"moreDude\" onClick={this.moreFromTheDude} >More from The Dude</button>\n          <br/>\n          <br/>\n            {this.props.reduxState.lebowskiReducer.quote && (\n                <div className=\"dude\">\n                  {this.props.reduxState.lebowskiReducer.quote.lines.map(rug => (\n                    <div className=\"display\" key={rug.id}>\n                      <h4>{rug.text}</h4>\n                      <p>-{rug.character.name}</p>\n                    </div>\n                    ))}\n                  </div>\n                )}\n          </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(Lebowski);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\n\n\n//this component allows user to filter calendar\nclass Shows extends Component {\n\n    state={\n      show: false,\n      query: [],\n      type: \"genre\"\n    }\n\n    componentDidMount=()=>{\n      this.props.dispatch({type: 'GET_ALL_GENRES'})\n    }\n\n    filter=(event)=>{\n        this.setState({type: event.target.value});\n    }\n\n    handleInputChange = () => {\n      const value = this.search.value\n      this.setState({query: value})\n      const predictions = this.getPredictions(value);\n          this.setState({\n            predictions\n          });\n    }\n\n    getPredictions=(value)=>{\n      if(this.state.type === 'genre'){\n        const list = this.props.reduxState.genreReducer.allGenres.map(genre=>{\n          return genre.genre\n        })\n        if (value.length > 0) {\n          let filteredList = list.filter(genre => genre.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n          this.setState({query: filteredList})\n        }\n      }\n      else if(this.state.type === 'bandname'){\n        const list = this.props.reduxState.currentEvent.allBands.map(band=>{\n          return band.bandname\n        })\n        if (value.length > 0) {\n          let filteredList = list.filter(genre => genre.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n          this.setState({query: filteredList})\n        }\n      }\n      else if(this.state.type === 'venuename'){\n        const list = this.props.reduxState.currentEvent.allVenues.map(venue=>{\n          return venue.venuename\n        })\n        if (value.length > 0) {\n          let filteredList = list.filter(genre => genre.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n          this.setState({query: filteredList})\n        }\n      }\n    }\n\n\n    refresh=()=>{\n      this.props.dispatch({type: 'GET_EVENT_LIST'});\n      this.setState({show: false})\n    }\n\n    submit=(event)=>{\n      event.preventDefault();\n      this.props.dispatch({type: 'GET_NEW_LIST', payload: this.state})\n    }\n\n    toggle=()=>{\n      if(this.state.show === false){\n        this.setState({show: true})\n      }else{\n        this.setState({show: false})\n      }\n      this.props.dispatch({type: 'GET_ALL_BANDS'})\n      this.props.dispatch({type: 'GET_ALL_VENUES'})\n    }\n\n  render() {\n\n    return (\n      <>\n      {this.state.show === false &&\n      <button className=\"log-in\" onClick={this.toggle}>Search</button>\n      }\n      {this.state.show === true &&\n        <>\n          <button className=\"log-in\" onClick={this.toggle}>hide</button>\n          <div className='filter'>\n              <select className='filterList' onChange={this.filter} value={this.state.value}>\n                  <option value=\"genre\">filter by genre</option>\n                  <option value=\"bandname\">filter by band</option>\n                  <option value=\"venuename\" >filter by venue</option>\n              </select>\n            <form className=\"search\" onSubmit={(event)=>this.submit(event)}>\n              <input\n                size=\"15\"\n                className=\"serachInputt\"\n                placeholder=\"Search for...\"\n                ref={input => this.search = input}\n                onChange={this.handleInputChange}\n              />\n              <p>{this.state.query}</p>\n              <input type='submit' className='log-in reverse'/>\n              <button className=\"log-in reverse\" onClick={this.refresh}>refresh</button>\n            </form>\n          </div>\n        </>\n      }\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(Shows);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport {withRouter} from 'react-router-dom';\nimport Shows from '../Shows/Shows';\n\n\n//displays full calendar event list\nclass CalendarView extends Component {\n\n  componentDidMount=()=>{\n      this.props.dispatch({type: 'GET_EVENT_LIST'});\n  }\n   \n  bandInfo=(id)=>{\n    // console.log('you clickd on band info to event', id);\n    this.props.history.push({\n      pathname: '/band-view',\n      payload: id\n    })\n    this.props.dispatch({type: 'GET_THE_BAND', payload: id})\n  }\n\n  venueInfo=(id)=>{\n    // console.log('you clicked on venue info', id);\n    this.props.history.push({\n      pathname: '/venue-view',\n      payload: id\n    })\n    this.props.dispatch({type: 'GET_THE_VENUE', payload: id})\n  }\n\n  render() {\n    return (\n      <>\n      <Shows/>\n        <div className='fullView'>\n            <h1 className=\"center\" >Upcoming Events</h1>\n            {this.props.reduxState.event.calendarReducer && (\n              <div className=\"calendarView\">\n                {this.props.reduxState.event.calendarReducer.map(event => (\n                  <div className=\"poster\" key={event.id}>\n                    <img className=\"inlinePhoto\" src={`data:image/png;base64,${event.band_photo}`}  \n                    alt='' height=\"95vh\" width=\"95vmin\"\n                    onClick={()=>this.bandInfo(event.bands_id)}/>\n                    <br />\n                    <div className=\"eventInfo\">\n                      <div>{event.date}</div>\n                      <div>Tickets {event.cost}</div> \n                    </div>\n                    <img className=\"inlinePhoto\" src={`data:image/png;base64,${event.venue_photo}`}  \n                    alt='' height=\"95vh\" width=\"95vmin\"\n                    onClick={()=>this.venueInfo(event.venues_id)}/>\n                  </div>\n                ))}\n              </div>\n            )}\n        </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default withRouter(connect(putReduxStateOnProps)(CalendarView));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\n\n\n//shows the selectedd band's bio page\nclass BandView extends Component {\n\n  componentDidMount=()=>{\n    let id = this.props.history.location.payload;\n      this.props.dispatch({type: 'GET_THE_BAND', payload: id});\n      this.props.dispatch({type: 'GET_THIS_GENRE', payload: id});\n  }\n\n  render() {\n    const gig = this.props.reduxState.currentEvent.bandReducer;\n    return (\n      <>\n        <div className=\"fullView\">\n          <button className=\"log-in\" onClick={()=>this.props.history.push('/calendar-view')}>Return To Calendar</button>\n            <div className=\"bandView\" key={gig.id}>\n              <div className=\"bioBanner\">{gig.bandname}</div>\n              <img className=\"bioPhoto\" src={`data:image/png;base64,${gig.photo}`} alt={gig.bandname}/>\n              <br />\n              <div className=\"bioDescription\">\n                {gig.description}\n              </div>\n                {this.props.reduxState.genreReducer.bandGenre && (\n                  <div className=\"genre\">\n                    <div>Genre:</div>\n                    {this.props.reduxState.genreReducer.bandGenre.map(band => (\n                      <div className=\"space\" key={band.id}>\n                        {band.genre}\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div className=\"socialMedia\">\n                  <a href={gig.twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <img className=\"linkIcons\" src=\"/images/twitter.png\" alt={gig.twitter}/>\n                  </a>\n                  <a href={gig.facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <img className=\"linkIcons\" src=\"/images/facebook.png\" alt={gig.facebook}/>\n                  </a>\n                  <a href={gig.www} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <img className=\"linkIcons\" src=\"/images/www.png\" alt={gig.www}/>\n                  </a>  \n                  <a href={gig.youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <img className=\"linkIcons\" src=\"/images/youtube.png\" alt={gig.youtube}/>\n                  </a>\n                </div>\n            </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(BandView);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\n\n\n\n// as of this moment only displays map, need to add geo\nexport class Gmaps extends Component {\n\n  \n\n  static defaultProps = {\n    center: {\n      lat: 44.9781162,\n      lng: -93.2634743\n    },\n    zoom: 14\n  };\n  \n  \n\n  render() {\n    return (\n        <>\n         <div className=\"mapContainer\">\n            <GoogleMapReact\n              bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY }}\n              defaultCenter={this.props.center}\n              defaultZoom={this.props.zoom}\n            >\n              {/* <Marker\n                lat={44.9781162}\n                lng={-93.2634743}\n                text=\"venue\"\n               /> */}\n           </GoogleMapReact>\n      </div>\n        </>\n    );\n  }\n}\n\n\n\nexport default Gmaps;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport {withRouter} from 'react-router-dom';\nimport Gmaps from '../Gmaps/Gmaps';\n\n//this component is for how a venue looks to all users\nclass VenueView extends Component {\n\n\n  componentDidMount=()=>{\n    let id = this.props.history.location.payload;\n    this.props.dispatch({type: 'GET_THE_VENUE', payload: id});\n  }\n\n  render() {\n    const gig = this.props.reduxState.currentEvent.venueReducer;\n\n    return (\n      <>\n        <div className='bandView'>\n        <button className=\"log-in\" onClick={()=>this.props.history.push('/calendar-view')}>Return To Calendar</button>\n          <div className=\"venueView\" key={gig.id}>\n            <div className=\"bioBanner\">{gig.venuename}</div>\n            <img className=\"bioPhoto\" src={`data:image/png;base64,${gig.photo}`} alt={gig.venuename}/>\n            <br />\n            <div className=\"bioAddress\">\n              {gig.address}\n            </div>\n            <div className=\"bioAddress\">\n              {gig.phone}\n            </div>\n            <div className=\"bioDescription\">\n              {gig.description}\n            </div>\n            <div className=\"mapContainer\">\n            <Gmaps\n            />\n            </div>\n            <div className=\"socialMedia\">\n              <a href={gig.twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                <img className=\"linkIcons\" src=\"/images/twitter.png\" alt={gig.twitter}/>\n              </a>\n              <a href={gig.facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                <img className=\"linkIcons\" src=\"/images/facebook.png\" alt={gig.facebook}/>\n              </a>\n              <a href={gig.www} target=\"_blank\" rel=\"noreferrer noopener\">\n                <img className=\"linkIcons\" src=\"/images/www.png\" alt={gig.www}/>\n              </a>  \n              <a href={gig.youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                <img className=\"linkIcons\" src=\"/images/youtube.png\" alt={gig.youtube}/>\n              </a>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default withRouter(connect(putReduxStateOnProps)(VenueView));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\n\n\n//currently an unused component, may hold it for gmaps location approval\nclass Zip extends Component {\n\nstate={\n  zip: \"\"\n}\n\n  zippy=(event)=>{\n    event.preventDefault();\n    console.log('your zip is:', this.state.zip);\n  }\n\n  handleChange=(zip, event)=>{\n    this.setState({[zip]: event.target.value});\n  }\n\n  render() {\n    return (\n      <>\n        <div className='zip'>\n          <form className=\"zipForm\" onSubmit={this.zippy}>\n            <input className=\"zip\" placeholder=\"Enter Zip\" type=\"text\" pattern=\"[0-9]*\" \n            onChange={(event) => this.handleChange('value', event)}/>\n            <input className=\"log-in\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>        \n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(Zip);","import React from 'react';\nimport Swal from 'sweetalert2'\n\n\n//very simple component, just gives a toast when a user logs in\nconst SignInSuccess = () => {\n    \n    const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        width: 170,\n        timerProgressBar: true,\n        onOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n    })\n    Toast.fire({\n        icon: 'success',\n        title: 'Signed in successfully'\n    })\n    return(\n            <>\n            </>\n    )\n}\n\n\nexport default SignInSuccess;","import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport SignInSuccess from '../SignInSuccess/SignInSuccess';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\nconst UserPage = (props) => {\n  \n  //preloads band / venue info\n  if(props.user.band === true){\n    props.dispatch({type: 'GET_THIS_BAND', payload: props.user.id})\n  }else if(props.user.venue === true){\n    props.dispatch({type: 'GET_THIS_VENUE', payload: props.user.id})\n  }\n  \n  return (\n      <>\n        <div className=\"welcomeFriend\">\n          <h1 id=\"welcome\">\n            Welcome, { props.user.username }!\n          </h1>\n          <img className=\"bioPhoto\" src={`data:image/png;base64,${props.user.photo}`} alt=\"profile\" />\n          {/* <p className=\"welcomeId\" >Your ID is: {props.user.id}</p> */}\n          <LogOutButton className=\"log-in btnFix\" />\n          {props.user.id !== ''\n          ?\n          <SignInSuccess /> \n          : null}\n        </div>\n      </>\n    );\n}\n\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);","import React, {useState} from 'react';\nimport '../App/App.css'\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\n\n//this page needs some edit work, currently is how a regular user equests to be a band or venue\n\nconst InfoPage = (props) => {\n  const [value, setValue] = useState('');\n  \nreturn(\n  <div>\n      {(props.user.band === false && props.user.venue === false) &&\n       <div>\n         <h4><strong>Beats on Point𝅘𝅥𝅯</strong>.  is a music first community</h4>\n         <p>Registering as a band or venue allows you to add to the public calendar</p>\n         <p>want to register as a band or venue?</p>\n         <form onSubmit={()=>{props.history.push('/'); props.dispatch({type: `NEW_${value}`, payload: props.user.id}); props.dispatch({ type: 'LOGOUT' })}}>\n            <input type=\"radio\" name=\"choose\" value=\"BAND\" onChange={()=>setValue('BAND')}/>\n            <label htmlFor=\"BAND\">Band</label>\n            <input type=\"radio\" name=\"choose\" value=\"VENUE\" onChange={()=>setValue('VENUE')}/>\n            <label htmlFor=\"VENUE\">Venue</label>\n            <input type=\"radio\" name=\"choose\" value=\"NOPE\" onChange={()=>setValue('NOPE')}/>\n            <label htmlFor=\"NOPE\">No Thanks</label>\n            <input type=\"submit\" value=\"submit\"/>\n          </form>\n          <p>If you choose to create yourself as a band or venue you will be logged out</p>\n          <p>then just log back in with current name and password</p>\n       </div>\n      }\n    {props.user.band === true &&\n      <div>\n        <p>already in a band!</p>\n        <p>if you would like to register as a venue or another band please make another accout</p>\n      </div>\n    }\n    {props.user.venue === true &&\n      <div>\n        <p>already registered as a venue</p>\n        <p>if you want to register as a band or another venue please create another account</p>\n      </div>\n     }\n  </div>\n);\n    }    \n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default withRouter(connect(mapStateToProps)(InfoPage));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport swal from 'sweetalert'\n\n//reuseable component for photo upload\nclass PhotoEdit extends Component {\n\n    state={\n        file: '',\n        filename: \"No File Selected\",\n        image: null\n    }\n\n\n    addClick=()=>{\n        this.refs.fileUploader.click();\n    }\n    \n    componentDidMount=()=>{\n        this.props.dispatch({type: 'GET_YOUR_PICTURE', payload: this.props.reduxState.user.id});\n    }\n\n    handleChange=(event)=>{\n        this.setState({\n            file: event.target.files[0],\n            filename: event.target.files[0].name,\n            image: URL.createObjectURL(event.target.files[0])\n        });\n    }\n\n    submit=(event)=>{\n        event.preventDefault();\n        console.log('just commenting', this.state.filename, this.props.reduxState.user.id);\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const image = ({pic: formData, user: this.props.reduxState.user});\n        this.props.dispatch({type: 'WANT_YOUR_PICTURE', payload: image});\n        swal({\n            icon: \"success\",\n            button: false,\n            timer: 1500,\n            text: 'success!'\n          });\n    }\n\n\n  render() {\n    return (\n      <>\n        <div className='photoEdit'>\n        <button className=\"log-in\" onClick={()=>this.props.history.goBack()}>Back</button>\n            <form  className=\"photoForm\" onSubmit={this.submit}>\n                 <div className=\"photoInput\">\n                    <input type=\"file\" ref=\"fileUploader\" onChange={this.handleChange} />\n                    <label htmlFor=\"file\" className=\"photoUpload\" onClick={this.addClick}>Choose</label>\n                 </div>\n                <div>\n                    {this.state.file \n                    ?\n                    <div className=\"previewImage\">\n                        <p>preview: <strong>{this.state.filename}</strong></p>\n                        <img src={this.state.image} alt='' width=\"250px\"/>   \n                    </div>\n                    :\n                    <div className=\"previewImage\">\n                        <p>a preview of your image will display below </p>\n                        <img src=\"/images/preview.png\" alt='' width=\"250px\"/>\n                    </div>\n                    ?\n                    <div className=\"previewImage\">\n                        <p>Current photo:</p>\n                        <img src={`data:image/png;base64,${this.props.reduxState.user.photo}`}  alt='' width=\"250px\"/>   \n                    </div>\n                    :\n                    <div className=\"previewImage\">\n                        <p>a preview of your image will display below </p>\n                        <img src=\"/images/preview.png\" alt='' width=\"250px\"/>\n                    </div>\n                    }\n                </div>\n                <input type='submit'value='Upload'className=\"log-in\"/>\n            </form>\n        </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \n  export default connect(putReduxStateOnProps)(PhotoEdit);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\n\n\n\n// component for admin tasks - currently only displays lists of all bands/venues/users/genres\nclass Admin extends Component {\n\n  \n  addMe=(type)=>{\n    console.log('add this:', type);\n  }\n\n  editMe=(type)=>{\n    console.log('edit this', type);\n  }\n\n  listMe=(type)=>{\n    console.log('list all:', type);\n    this.props.dispatch({type: 'GET_ALL_ADMIN', payload: type})\n  }\n\n  removeMe=(type)=>{\n    console.log('remove this', type);\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"center\">Hi {this.props.reduxState.user.username}</h1>\n        <p className=\"center\">What would you like to do today?</p>\n        <table>\n            <thead>\n                <tr><th>Add</th><th>Remove</th><th>Edit</th></tr>\n            </thead>\n            <tbody>\n                <tr refs=\"bands\">\n                  <td><button onClick={()=>this.addMe('bands')}>Band</button></td>\n                  <td><button onClick={()=>this.removeMe('bands')}>Band</button></td>\n                  <td><button onClick={()=>this.edieMe('bands')}>Band</button></td>\n                </tr>\n                <tr refs=\"venue\">\n                  <td><button onClick={()=>this.addMe('venues')}>Venue</button></td>\n                  <td><button onClick={()=>this.removeMe('venues')}>Venue</button></td>\n                  <td><button onClick={()=>this.editMe('venues')}>Venue</button></td>\n                </tr>\n                <tr><td><button>User</button></td><td><button>User</button></td><td><button>User</button></td></tr>\n                <tr><td><button>Genre</button></td><td><button>Genre</button></td><td><button>Genre</button></td></tr>\n                <tr><td><button>Comment</button></td><td><button>Comment</button></td><td><button>Comment</button></td></tr>\n                <tr><td><button>Ratting</button></td><td><button>Rating</button></td><td><button>Rating</button></td></tr>\n                <tr><td><button>Event</button></td><td><button>Event</button></td><td><button>Event</button></td></tr>\n            </tbody>\n        </table>\n        <br/>\n        <br/>\n        <table>\n            <thead>\n                <tr>\n                  <th>List All Bands</th>\n                  <th>List All Venues</th>\n                  <th>List All Users</th>\n                  <th>List All Genres</th>\n                </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><button onClick={()=>this.listMe('bands')}>List</button></td>\n                <td><button onClick={()=>this.listMe('venues')}>List</button></td>\n                <td><button onClick={()=>this.listMe(`\"user\"`)}>List</button></td>\n                <td><button onClick={()=>this.listMe('genres')}>List</button></td>\n              </tr>\n            </tbody>\n        </table>\n        {this.props.reduxState.admin.listAllReducer &&\n          <ul>\n            {this.props.reduxState.admin.listAllReducer.map(list=>\n              <li>id: {list.id}, {list.bandname} {list.venuename} {list.genre} {list.username}</li>\n              )}\n          </ul>\n        }\n      </>\n    )\n  }\n}\n\n\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(Admin);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport swal from 'sweetalert';\nimport Swal from 'sweetalert2'\n\n\n//page for logged in band to edit profile\nclass BandEdit extends Component {\n\n  componentDidMount=()=>{\n      const user = this.props.reduxState.user;\n      const band =this.props.reduxState.editProfile.editBandReducer;\n      console.log(user.username);\n      this.props.dispatch({type: 'GET_THIS_BAND', payload: user.id});\n      this.props.dispatch({type: 'GET_EDIT_GENRE', payload: band.id});\n      this.props.dispatch({type: 'GET_ALL_GENRES'})\n  }\n    \n  descriptionEdit=(bandId, type)=>{\n    const user = this.props.reduxState.user;\n      swal(\"New Bio Here....\", {\n        content: \"input\",\n      })\n      .then((value) => {\n        swal(`You typed: ${value}`)\n        return(value)\n      }).then((value)=>{\n      swal({\n        title: `Do you want to keep your new bio?`,\n        text: `${value}`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((keep) => {\n        if (keep) {\n          swal(\"You new bio has been saved!\", {\n            icon: \"success\",\n          });\n          this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: bandId, who: 'bands', userId: user.id}})\n        } else {\n          swal(\"Not touching your bio!\");\n        }\n      });\n    })\n  }\n\n  nameEdit=(bandId, type, current)=>{\n    const user = this.props.reduxState.user;\n      swal(`Current: ${current}`, {\n        content: \"input\",\n      })\n      .then((value) => {\n        swal(`You typed: ${value}`)\n        return(value)\n      }).then((value)=>{\n      swal({\n        title: `Great name! should we keep it?`,\n        text: `${value}`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((keep) => {\n        if (keep) {\n          swal(\"You name has been saved!\", {\n            icon: \"success\",\n          });\n        this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: bandId, who: 'bands', userId: user.id}})\n        } else {\n          swal(\"Not touching your name!\");\n        }\n      });\n    })\n  }\n\n  genreEdit=(bandId)=>{\n    const user = this.props.reduxState.user;\n    let options = {}\n    this.props.reduxState.genreReducer.allGenres.map(band => {\n      return options[band.id] = band.genre\n      })\n    console.log('hey', options);\n    Swal.fire({\n      title: 'Select field validation',\n      input: 'select',\n      inputOptions: options,\n      inputPlaceholder: 'Select Genre',\n      showCancelButton: true\n      }).then((genre)=>{\n        console.log(genre)\n        if(genre){\n          Swal.fire({\n            title: `You selected ${genre.value}`,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: \"Add it!\"\n            }).then((result) => {\n                if (result.value) {\n                  Swal.fire(\n                    'saved!',\n                    `New genre added!`,\n                    'success'\n                  )\n          this.props.dispatch({type: 'ADD_MY_GENRE', payload:{edit: genre.value, id: bandId, userId: user.id}})\n                }\n            })\n         }\n      })\n  }\n\n  photoEdit=()=>{\n    // console.log('takin pictures');\n    this.props.history.push('/photo-edit');\n  }\n\n  socialMedia=(bandId, type, link)=>{\n    const user = this.props.reduxState.user;\n      // console.log(`in social media, ${bandId}, ${type}`);\n    Swal.fire({\n      title: `Current: ${link}`,\n      input: 'url',\n      inputPlaceholder: `Enter ${type} URL`\n    }).then((url)=>{\n      if (url) {\n        Swal.fire(`Entered URL: ${url.value}`)\n        console.log(url.value)\n        return(url)\n      }\n    }).then((url)=>{\n      Swal.fire({\n        title: `Is this the correct ${type} URL?`,\n        text: url.value,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: \"Yes, let's keep it!\"\n      }).then((result) => {\n        if (result.value) {\n          Swal.fire(\n            'saved!',\n            `Your ${type} link has been updated!`,\n            'success'\n          )\n          this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: url.value, id: bandId, type: type, who: \"bands\", userId: user.id}})\n        }\n      })\n    })\n  }\n\n  render() {\n    const gig = this.props.reduxState.editProfile.editBandReducer\n    return (\n      <>\n      <button className=\"log-in\" onClick={()=>this.props.history.goBack()}>Back</button>\n        <div className=\"profileViewEdit\" key={gig.id}>\n          {this.props.reduxState &&\n            <h1 className=\"welcome\" >Welcome {this.props.reduxState.user.username}</h1>\n          }\n            <div className=\"nameEdit\">\n              <p className=\"profileName\" >Band Name: <strong>{gig.bandname}</strong></p>\n              <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.nameEdit(gig.id, 'bandname', gig.bandname)}/>\n            </div>    \n            <div className=\"bioPhotoEdit\">\n              <img className=\"editBioPhoto\" src={`data:image/png;base64,${gig.photo}`} alt={gig.bandname}/>\n              <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={this.photoEdit}/>\n            </div>\n            {this.props.reduxState.genreReducer.bandEditGenre && (\n                  <div className=\"genreEdit\">\n                    \n                    <div>Genre:</div>\n                    {this.props.reduxState.genreReducer.bandEditGenre.map(band => (\n                      <div className=\"space\" key={band.id}>\n                        <strong>{band.genre}</strong>\n                      </div>\n                    ))}\n                     <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.genreEdit(gig.id)}/>\n                  </div>\n                )}\n            <div className=\"bioDescriptionEdit\">\n              {gig.description}\n              <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.descriptionEdit(gig.id, 'description')}/>\n            </div>\n            <div className=\"socialMediaEdit\">\n              <img className=\"linkIcon\" src=\"/images/twitter.png\" alt=\"twitter\"/>\n              <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"twitter\", gig.twitter)}/>\n              <img className=\"linkIcon\" src=\"/images/facebook.png\" alt=\"facebook\"/>\n              <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"facebook\", gig.facebook)}/>                        \n              <img className=\"linkIcon\" src=\"/images/www.png\" alt=\"website\"/>\n              <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"www\", gig.www)}/>                        \n              <img className=\"linkIcon\" src=\"/images/youtube.png\" alt=\"youtube\"/>\n              <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"youtube\", gig.youtube)}/>                   \n            </div>\n          </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(BandEdit);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport Swal from 'sweetalert2'\nimport swal from 'sweetalert';\n\n\n//this component allows venues to edit thier profile\nclass VenueEdit extends Component {\n\n  addressEdit=(venueId, type, current)=>{\n      console.log('new address');\n      const user = this.props.reduxState.user;\n      swal(`Current: ${current}`, {\n        content: \"input\",\n      })\n      .then((value) => {\n        swal(`You typed: ${value}`)\n        return(value)\n      }).then((value)=>{\n      swal({\n        title: `Correct new address?`,\n        text: `${value}`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((keep) => {\n        if (keep) {\n          swal(\"Your address has been saved!\", {\n            icon: \"success\",\n          });\n        this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: venueId, who: 'venues', userId: user.id}})\n        } else {\n          swal(\"Not touching your address!\");\n        }\n      });\n    })\n  }\n\n  componentDidMount=()=>{\n      const user = this.props.reduxState.user;\n      console.log(user.username);\n      this.props.dispatch({type: 'GET_THIS_VENUE', payload: user.id});\n  }\n\n  descriptionEdit=(venueId, type)=>{\n    const user = this.props.reduxState.user;\n      swal(\"New Bio Here....\", {\n        content: \"input\",\n      })\n      .then((value) => {\n        swal(`You typed: ${value}`)\n        return(value)\n      }).then((value)=>{\n      swal({\n        title: `Do you want to keep your new bio?`,\n        text: `${value}`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((keep) => {\n        if (keep) {\n          swal(\"You new bio has been saved!\", {\n            icon: \"success\",\n          });\n          this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: venueId, who: 'venues', userId: user.id}})\n        } else {\n          swal(\"Not touching your bio!\");\n        }\n      });\n    })\n  }\n\n  nameEdit=(venueId, type, current)=>{\n      const user = this.props.reduxState.user;\n      swal(`Current: ${current}`, {\n        content: \"input\",\n      })\n      .then((value) => {\n        swal(`You typed: ${value}`)\n        return(value)\n      }).then((value)=>{\n      swal({\n        title: `Great name! should we keep it?`,\n        text: `${value}`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((keep) => {\n        if (keep) {\n          swal(\"Your name has been saved!\", {\n            icon: \"success\",\n          });\n          this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: venueId, who: 'venues', userId: user.id}})\n        } else {\n          swal(\"Not touching your name!\");\n        }\n      });\n    })\n  }\n\n  phoneEdit=(venueId, type, current)=>{\n    // console.log('phone number');\n    const user = this.props.reduxState.user;\n    swal(`Current: ${current}`, {\n      content: \"input\",\n    })\n    .then((value) => {\n      swal(`You typed: ${value}`)\n      return(value)\n    }).then((value)=>{\n    swal({\n      title: `Correct new phone number?`,\n      text: `${value}`,\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((keep) => {\n      if (keep) {\n        swal(\"Your phone number has been saved!\", {\n          icon: \"success\",\n        });\n      this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: value, type: type, id: venueId, who: 'venues', userId: user.id}})\n      } else {\n        swal(\"Not touching your phone number!\");\n      }\n    });\n  })\n}\n\n  photoEdit=()=>{\n    // console.log('takin pictures');\n    this.props.history.push('/photo-edit');\n  }\n\n  socialMedia=(venueId, type, link)=>{\n    const user = this.props.reduxState.user;\n    Swal.fire({\n      title: `Current: ${link}`,\n      input: 'url',\n      inputPlaceholder: `Enter ${type} URL`\n    }).then((url)=>{\n      if (url) {\n        Swal.fire(`Entered URL: ${url.value}`)\n        console.log(url.value)\n        return(url)\n      }\n    }).then((url)=>{\n      Swal.fire({\n        title: `Is this the correct ${type} URL?`,\n        text: url.value,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: \"Yes, let's keep it!\"\n      }).then((result) => {\n        if (result.value) {\n          Swal.fire(\n            'saved!',\n            `Your ${type} link has been updated!`,\n            'success'\n          )\n          this.props.dispatch({type: 'EDIT_DETAILS', payload:{edit: url.value, id: venueId, type: type, who: \"venues\", userId: user.id}})\n        }\n      })\n    })\n  }\n\n  render() {\n    const gig = this.props.reduxState.editProfile.editVenueReducer;\n    return (\n      <>\n      <button className=\"log-in\" onClick={()=>this.props.history.goBack()}>Back</button>\n        <div className='profileEdit'>\n          <div className=\"profileViewEdit\" key={gig.id}>\n            {this.props.reduxState &&\n              <h1 className=\"welcome\">Welcome {this.props.reduxState.user.username}</h1>\n             }\n              <div className=\"nameEdit\">\n                  <p className=\"profileName\" >Venue Name: <strong>{gig.venuename}</strong></p>\n                  <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.nameEdit(gig.id, 'venuename', gig.venuename)}/>\n              </div>    \n              <div className=\"bioPhotoEdit\">\n                  <img className=\"editBioPhoto\" src={`data:image/png;base64,${gig.photo}`} alt={gig.venuename}/>\n                  <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={this.photoEdit}/>\n              </div>\n              <div className=\"bioAddressEdit\">\n                  {gig.address}\n                  <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.addressEdit(gig.id, 'address', gig.address)}/>\n              </div>\n              <div className=\"bioPhoneEdit\">\n                  {gig.phone}\n                  <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.phoneEdit(gig.id, 'phone', gig.phone)}/>\n              </div>\n              <div className=\"bioDescriptionEdit\">\n                  {gig.description}\n                  <img className=\"editButton\" src='./images/edit.png' alt=\"edit\" onClick={()=>this.descriptionEdit(gig.id, 'description')}/>\n              </div>\n              <div className=\"socialMediaEdit\">\n                <img className=\"linkIcon\" src=\"/images/twitter.png\" alt=\"twitter\"/>\n                <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"twitter\", gig.twitter)}/>\n                <img className=\"linkIcon\" src=\"/images/facebook.png\" alt=\"facebook\"/>\n                <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"facebook\", gig.facebook)}/>                        \n                <img className=\"linkIcon\" src=\"/images/www.png\" alt=\"website\"/>\n                <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"www\", gig.www)}/>                        \n                <img className=\"linkIcon\" src=\"/images/youtube.png\" alt=\"youtube\"/>\n                <img className=\"editLinkIcon\" src=\"/images/pencil.png\" alt=\"edit\" onClick={()=>this.socialMedia(gig.id, \"youtube\", gig.youtube)}/>                   \n              </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default connect(putReduxStateOnProps)(VenueEdit);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../App/App.css';\nimport {withRouter} from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport swal from 'sweetalert';\n\n\n\n//page for bands and venues to add new events, landing page when band/venue logs in\nclass AddEvent extends Component {\n\n  state={\n    date: new Date(),\n    cost: 0,\n    bands: null,\n    bandsId: null,\n    venues: null,\n    venuesId: null,\n    id: null,\n    who: null\n  }\n\n  addition=()=>{\n    swal({\n      icon: \"success\",\n      title: \"A message has been sent to an admin with your request\"\n    });\n  }\n\n  componentDidMount=()=>{\n      const user = this.props.reduxState.user;\n      this.setState({id: user.id})\n      if(this.props.reduxState.user.band === true){\n        this.props.dispatch({type: 'GET_MY_CALENDAR', payload: {id: user.id, who: 'bands'}})\n        this.props.dispatch({type: 'GET_ALL_VENUES'})\n        this.props.dispatch({type: 'GET_THIS_BAND', payload: this.props.reduxState.user.id})\n        this.setState({bands: this.props.reduxState.editProfile.editBandReducer.bandname})\n        this.setState({bandsId: this.props.reduxState.editProfile.editBandReducer.id})\n        this.setState({who: 'bands'})\n    }else{\n        this.props.dispatch({type: 'GET_MY_CALENDAR', payload: {id: user.id, who: 'venues'}})\n        this.props.dispatch({type: 'GET_ALL_BANDS'});\n        this.props.dispatch({type: 'GET_THIS_VENUE', payload: this.props.reduxState.user.id})\n        this.setState({venues: this.props.reduxState.editProfile.editVenueReducer.venuename})\n        this.setState({venuesId: this.props.reduxState.editProfile.editVenueReducer.id})\n        this.setState({who: 'venues'})\n      }\n  }\n\n  editProfile=()=>{\n      if(this.props.reduxState.user.band === true){\n          this.props.history.push('/band-edit')\n      }else{\n          this.props.history.push('/venue-edit')\n      }\n  }\n\n  filter=(event)=>{\n    this.setState({cost: event.target.value});\n  }\n\n  newEvent=()=>{\n    let objectToSend = this.state;\n    swal({\n      title: \"Create New Event?\",\n      text: `${this.state.bands} playing at ${this.state.venues} on ${this.state.date} for ${this.state.cost}`,\n      icon: \"info\",\n      buttons: true,\n      dangerMode: false,\n    })\n    .then((keep) => {\n      if (keep) {\n        swal(\"Your new event has been added to the calendar!\", {\n          icon: \"success\",\n        })\n        this.props.dispatch({type: 'CREATE_NEW_EVENT', payload: objectToSend})\n      } else {\n        swal(\"cool, not adding event\");\n      }\n    });\n  }\n\n  removeEvent=(event)=>{\n    const user = this.props.reduxState.user;\n    // console.log('remove event', event);\n    this.props.dispatch({type: 'REMOVE_EVENT', payload: {id: user.id, who: 'bands', eventId: event}})\n  }\n\n  selectBand=(event)=>{\n    this.setState({bandsId: event.target.value});\n  }\n\n  selectDate=(date)=>{\n    this.setState({date})\n        // console.log('packing state:', this.state);\n  }\n\n  selectVenue=(event)=>{\n    this.setState({venuesId: event.target.value});\n  }\n\n    \n  render() {\n    return (\n      <>\n        <button className=\"log-in\" onClick={this.editProfile}>edit profile</button>\n        <h1 className=\"center\">Welcome {this.props.reduxState.user.username}</h1>\n        {this.props.reduxState.user.band === true &&\n          <>\n            <h3 className=\"left\">Your current events</h3>\n            {this.props.reduxState.event.personalCalendar\n            ?\n            this.props.reduxState.event.personalCalendar.map(event => (\n              <div className=\"poster addition\" key={event.id}>\n                <div>{event.venue_name}</div>\n                <div>{event.date}</div>\n                <div>Tickets {event.cost}</div>\n                <button className=\"deleteButton\" onClick={()=>this.removeEvent(event.id)}>X</button>\n              </div>\n            ))\n            :\n            <h6 className=\"center\">Nothing on your calendat yet</h6>\n            }\n          </>\n        }\n        {this.props.reduxState.user.venue === true &&\n          <>\n            <h3 className=\"left\">Your current events</h3>\n            {this.props.reduxState.event.personalCalendar\n            ?\n            this.props.reduxState.event.personalCalendar.map(event => (\n              <div className=\"poster addition\" key={event.id}>\n                <div>{event.band_name}</div>\n                <div>{event.date}</div>\n                <div>Tickets {event.cost}</div>\n                <button className=\"deleteButton\" onClick={()=>this.removeEvent(event.id)}>X</button>\n              </div>\n            ))\n            :\n            <h6>Nothing on your calendat yet</h6>\n            }\n          </>\n          }\n          <h3 className=\"left\">Add new event</h3>\n          <label className=\"left\" htmlFor=\"pick-date\" >Date</label>\n          <DatePicker\n              name=\"pick-date\"\n              selected={this.state.date}\n              onChange={(date)=>this.selectDate(date)}\n              showTimeSelect\n              dateFormat=\"Pp\"\n          />\n          <br/>\n          <div>\n            <label className=\"left\" htmlFor=\"cost\" >Cost</label>\n            <select name=\"cost\" className=\"filter\" onChange={this.filter} value={this.state.value}>\n                <option value=\"0\">Free</option>\n                <option value=\"5.00\">$5</option>\n                <option value=\"10.00\">$10</option>\n                <option value=\"15.00\">$15</option>\n                <option value=\"20.00\">$20</option>\n                <option value=\"25.00\">$25</option>\n            </select>\n          </div>\n          {this.props.reduxState.user.band === true &&\n          <>\n            <label className=\"left\" htmlFor=\"venue\">Venue</label>\n            <select name=\"venue\" className=\"filter\" ref={this.state.value} value={this.state.value} onChange={this.selectVenue}>\n                {this.props.reduxState.currentEvent.allVenues.map(dropdown => { \n                  return (\n                    <option onClick={()=>this.setState({venues: dropdown.venuename})} key={dropdown.id} value={dropdown.id} ref={dropdown.venuename}>\n                    {dropdown.venuename}</option>\n                  )})\n                }\n            </select>\n          </>\n          }\n          {this.props.reduxState.user.venue === true &&\n          <>\n            <label className=\"left\" htmlFor=\"band\" >Band</label>\n            <select name=\"band\" className=\"filter\" ref={this.state.value} value={this.state.value} onChange={this.selectBand}>\n            {this.props.reduxState.currentEvent.allBands.map(dropdown => { \n              return (\n              <option onClick={()=>this.setState({bands: dropdown.bandname})} key={dropdown.id} value={dropdown.id} ref={dropdown.bandname}>\n              {dropdown.bandname}</option>\n            )})\n            }\n            </select>\n          </>\n          }\n          <br/>\n          <button className=\"log-in left top\" onClick={this.newEvent}>submit</button>\n          <br/>\n          {this.props.reduxState.user.band === true &&\n            <h5 className=\"left\">Don't see the venue you want? <button className=\"log-in\" onClick={()=>this.addition('venue')}>create</button></h5>\n          }\n          {this.props.reduxState.user.venue === true &&\n            <h5 className=\"left\">Don't see the band you want? <button className=\"log-in\" onClick={()=>this.addition('band')}>create</button></h5>\n          }\n          <br/>\n      </>\n    )\n  }\n}\n\nconst putReduxStateOnProps = (reduxState) => ({\n    reduxState\n  });\n  \nexport default withRouter(connect(putReduxStateOnProps)(AddEvent));","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Redirect, Switch, Link} from 'react-router-dom';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\nimport './App.css';\nimport {connect} from 'react-redux';\nimport Footer from '../Footer/Footer'\nimport Nav from '../Nav/Nav';\nimport AboutPage from '../AboutPage/AboutPage';\nimport Lebowski from '../Lebowski/Lebowski';\nimport CalendarView from '../CalendarView/CalendarView';\nimport BandView from '../BandView/BandView';\nimport VenueView from '../VenueView/VenueView';\n\nimport Zip from '../Zip/Zip'\nimport Shows from '../Shows/Shows';\n\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport PhotoEdit from '../PhotoEdit/PhotoEdit';\nimport SignInSuccess from '../SignInSuccess/SignInSuccess';\nimport Admin from '../Admin/Admin';\nimport BandEdit from '../BandEdit/BandEdit';\nimport VenueEdit from '../VenueEdit/VenueEdit';\nimport AddEvent from '../AddEvent/AddEvent';\n\n\n\n\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <>\n          <Nav />\n          <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to=\"/home\" />\n              {/* Visiting localhost:3000/about will show the about page.\n              This is a route anyone can see, no login necessary */}\n              <Route exact path=\"/about\" component={AboutPage}/>\n              <Route exact path=\"/zip\" component={Zip}/>\n              <Route exact path=\"/lebowski\" component={Lebowski}/>\n              <Route exact path=\"/shows\" component={Shows}/>\n              <Route exact path=\"/calendar-view\" component={CalendarView}/>\n              <Route exact path=\"/band-view\" component={BandView}/>\n              <Route exact path=\"/venue-view\" component={VenueView}/>\n\n              {/* All routes below are protected, must be signed in to see */}\n              <ProtectedRoute exact path=\"/sign-in-success\" component={SignInSuccess}/>\n              <ProtectedRoute exact path=\"/calendar-edit\" component={AddEvent}/>\n              <ProtectedRoute exact path=\"/band-edit\" component={BandEdit}/>\n              <ProtectedRoute exact path=\"/venue-edit\" component={VenueEdit}/>\n              <ProtectedRoute exact path=\"/photo-edit\" component={PhotoEdit}/>\n              <ProtectedRoute exact path=\"/admin\" component={Admin}/>\n              {/* For protected routes, the view could show one of several things on the same route.\n              Visiting localhost:3000/home will show the UserPage if the user is logged in.\n              If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n              Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n              <ProtectedRoute\n                exact\n                path=\"/home\"\n                component={UserPage}\n              />\n              {/* This works the same as the other protected route, except that if the user is logged in,\n              they will see the info page instead. */}\n              <ProtectedRoute exact path=\"/info\" component={InfoPage}/>\n\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => \n                <div className=\"fourOfour\">\n                  <img src=\"./images/lebowski_404.png\" alt=\"lebowski\" className=\"lost\"/>\n                  <Link className=\"nav-link lostLink\" to=\"/lebowski\">The rug really did tie the room together</Link>\n                  <Link className=\"nav-link lostLinkBack\" to=\"/home\">Bring Me Somewhere Safe!</Link>\n                </div>\n              } />\n            </Switch>\n            <Footer />\n        </>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}